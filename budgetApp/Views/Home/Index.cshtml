@{
    ViewData["Title"] = "Home Page";
    List<SelectListItem> categories = new List<SelectListItem>();
    /* add our caegories into the list of ListItem */
    categories.Add(new SelectListItem
            {
                Text = "Need",
                Value = "Need"
            });
    categories.Add(new SelectListItem
            {
                Text = "Want",
                Value = "Want"
            });
    categories.Add(new SelectListItem
            {
                Text = "Saving/Invest",
                Value = "Saving/Invest"
            });
    categories.Add(new SelectListItem
            {
                Text = "Income",
                Value = "Income"
            });
}

@model budgetApp.Models.EntryModel

<head>
    <script src="~/lib/jquery/dist/jquery.js"></script>
    <link type="text/javascript" href="~/js/site.js" />
    <link type="text/css" href="~/css/site.css" />
</head>
<body>
<div class="text-center">
    <h1 class="display-4" id="lblMsg">@TempData["msg"]</h1>
</div>



    <form asp-controller="Home" method="post" id="entryForm" role="form" onsubmit="return checkFields()">
    <div>
        <table class="table">
            <tr>
                <td scope="col" class="td-right">Amount($)</td>
                <td scope="col">@Html.TextBoxFor(x=>x.amount, new {@style = "width: 200px;",@id="txtAmt", @type="number", @min="0.01",@step="0.01", @value="0", @class="form-control"})</td>
            </tr>
            <tr>
                <td scope="col" class="td-right">Category</td>
                <td scope="col">@Html.DropDownListFor(x=>x.category, categories, new {@style = "width: 200px;", @id="ddlCat", @class="form-control"})</td>
            </tr>
            <tr>
                <td scope="col" class="td-right">Sub Category(optional)</td>
                <td scope="col">@Html.TextBoxFor(x=>x.subCategory, new {@style = "width: 200px;", @id="txtSub", @class="form-control"})</td>
            </tr>
            <tr>
                <td scope="col" class="td-right">Description(Optional)</td>
                <td scope="col">@Html.TextAreaFor(x=>x.description, new {@style = "heigth: 80px; width: 200px;", @id="txtDesc", @class="form-control"})</td>
            </tr>
            <tr>
                <td scope="col" class="td-right">Date</td>
                <td scope="col"><input type="date" name="date" id="dtpDate" class="form-control" style="width: 200px;"/></td>
            </tr>
            
            <tr>
                <td scope="col" class="td-right">Make Recurring</td>
                <td scope="col"><input type="checkbox" id="chkRecurring" class="form-check-input" style="width:25px; height: 25px;"/></td>
            </tr>
            <tr id="rowRecurring" style="display:none;">
                <td scope="col" class="td-right">Frequency</td>
                <td scope="col"><select id="ddlRecurring">
                    <option value=0>Weekly</option>
                    <option value=1>Monthly</option>
                    <option value=2>Yearly</option>
                    <option value=3>Every X Weeks or Months</option>
                </select></td>
            </tr> 
            <tr id="rowX" style="display:none;">
                <td scope="col" class="td-right">
                    X : @Html.TextBoxFor(x=>x.recurringX, new {@style = "width: 100px;",@id="txtX", @type="number", @min="1",@step="1", @value=2})
                </td>
                <td scope="col">
                    <select id="ddlWeekMonth">
                        <option value=0>Week(s)</option>
                        <option value=1>Month(s)</option>
                    </select>
                </td>
            </tr>
        </table>
        <div style="text-align: center;">
            <button id="btnSubmit" type="submit" class="btn btn-outline-primary btn-lg" style="align-content: center;">Submit</button>
        </div>
        
    </div>
    </form>
    <div style="text-align: center;">
        @Html.ActionLink("View Reports", "Report")
    </div>

    </body>
<script>
    //we want to prototype a function for the Date object so that we can get the proper time for our datepicker
        Date.prototype.toDateInputValue = (function() {
        var local = new Date(this);
        local.setMinutes(this.getMinutes() - this.getTimezoneOffset());
        return local.toJSON().slice(0, 10);
        });
//make sure that all required fields have a value before sending them back
    
    function checkFields(){
        if(document.getElementById("txtAmt").value <= 0){
            alert("Must enter an amount.");
            return false;
        }
        
        if(document.getElementById("ddlCat").value == null || document.getElementById("ddlCat").value == ""){
            alert("Must select a category.");
            return false;
        }
        document.getElementById("btnSubmit").disabled = true;
        return true;
    }
    
   //when this page is first loaded we set the datepicker value to todays date, and set our timer to clear out
   //our lblMsg of any text that has been given to it from tempData
    $(document).ready( function () {
        //set the datepicker value to today
        $('#dtpDate').val(new Date().toDateInputValue());
        //set a timer to reset the message after time/1000 seconds
        function labelTimer(){
            var t = setTimeout(resetLabel, 15000);

            function resetLabel(){
                document.getElementById("lblMsg").innerText = "";
            }
        }
        //call the timer function
        labelTimer();
    });

    //function to display visibility for table rows of recurring entry fields
    const chkRecurring = document.getElementById("chkRecurring");
    chkRecurring.addEventListener('change', (event) => {
        if(event.currentTarget.checked){
            //we want to show our recurring data row
            document.getElementById("rowRecurring").style = "";
        }else{
            document.getElementById("rowRecurring").style = "display: none;";
        }
    });

    const ddlRecurring = document.getElementById("ddlRecurring");
    ddlRecurring.addEventListener('change', (event) => {
        if(ddlRecurring.value == 3){
            //display the textbox field for X and the select for weeks or months
            document.getElementById("rowX").style = "";
        }else{
            //do not show rowX since the user does not have that row selected
            document.getElementById("rowX").style = "display: none;";
        }
    });

</script>