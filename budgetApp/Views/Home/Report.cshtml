@model budgetApp.Models.ReportModel
<head>
    <link type="text/javascript" href="/js/site.js" />
    <link rel="stylesheet" href="~/css/site.css" />
    
</head>
<body>
<h2>@ViewBag.Msg</h2>

<form asp-controller="Home" method="post" id="reportForm" role="form">
    <table class="table table-sm" id="tblReport" style="width: 75%;">
        <tr>
            <th class="th-md">
                Category
            </th>
            <td>
                @Html.DropDownListFor(x => x.category, Model.categories, new {@id = "ddlCategories"})
            </td>
            <th class="th-md">
                Period
            </th>
            <td>
                @Html.DropDownListFor(x => x.period, Model.periods)
            </td>
            <td>
                <button type="submit" class="btn btn-outline-primary">View</button>
            </td>
        </tr>

    </table>
    
</form>
@Html.Raw(Model.strHTMLTable)
</body>
<script>

function editEntry(e, count){
  //this function is called first time the edit button is hit. We need to change change all of this rows
  //columns to textboxes
  //first lets get each column in this row
    var amt = document.getElementById("amt" + count)
    var cat = document.getElementById("cat" + count)
    var sub = document.getElementById("sub" + count)
    var des = document.getElementById("des" + count)
    var crt = document.getElementById("crt" + count)
    var sender = document.getElementById("edt" + count) // and get the button that was clicked
    var category = cat.textContent
    
    //change the values of each column value in the row to textboxes. 
    //for amount we want it as a substring that does not contain the first character which is a '$' so it does not mess up our database query
    amt.innerHTML = "<input class=\"txt-col\" id=\"txtAmt" + count + "\" value=\"" + amt.innerHTML.substring(1, amt.innerHTML.length) + "\"/>";  
    cat.innerHTML = "<select id=\"ddlCat" + count + "\" />"
    sub.innerHTML = "<input class=\"txt-col\" id=\"txtSub" + count + "\" value=\"" + sub.innerHTML + "\"/>";
    des.innerHTML = "<input class=\"txt-col\"  id=\"txtDes" + count + "\" value=\"" + des.innerHTML + "\"/>";
    crt.innerHTML = "<input class=\"txt-col\" id=\"txtCrt" + count + "\" value=\"" + crt.innerHTML + "\"/>";
    //now we want to change the buttons onclick to a method that will post the change
    sender.setAttribute("onClick", "javascript : changeEntry(event, "+ count +")")
    sender.setAttribute("class", "btn btn-row btn-success btn-sm");
    //now lets add the categories into the dropdown list of categories in this row
    var ddlCat = document.getElementById("ddlCat" + count)
    var ddlVal = document.getElementById("ddlCategories")//the select with the values we need
    ddlCat.innerHTML = ddlVal.innerHTML;
    //now we want to remove the all option
    ddlCat.remove(4)
    //select the category that was previosly selected
    ddlCat.value = category
    
    }
function changeEntry(e, count){
    //this function will actually change the values of an entry if the user confirms thats what they want to do.
    //we will take care of input validation on the backend since it is a bit easier for me to do in c# than in js
    //lets get each column in this row
    var amt = document.getElementById("txtAmt" + count)
    var cat = document.getElementById("ddlCat" + count)
    var sub = document.getElementById("txtSub" + count)
    var des = document.getElementById("txtDes" + count)
    var crt = document.getElementById("txtCrt" + count)
    var entryID = document.getElementById("entryID" + count)
    
    if(confirm("Change Entry?")){
            var url = "editEntry?intEntryId=" + entryID.textContent + "&strAmt=" + amt.value + "&strCat=" + cat.value+ "&strSub=" + sub.value + "&strDes=" + des.value + "&strCrt=" + crt.value; 
            $.post(url, function(data){
                /**
                 * Code Schem for return value : data
                 * 0 = all good, entry was changed sucessfully
                 * -1 = no session open
                 * -2 = invalid amount
                 * -3 = invalid created time
                 * -4 = invalid category, not in database table
                 * -5 = unable to open database connection
                 * -6 = unable to execute statement
                 */
                if(data == 0){
                    alert("sucessfully updated your entry.")
                    window.location.reload();
                }
                else{
                    alert(data);
                }
            });
        }
}
function deleteEntry(e, id){
        if(confirm("Delete Entry?")){
            //we have to get the entryID of the entry we want to delete. First lets get the row number from the id of the button that fired this event
            var x = id.replace('d','');
            x = x.replace('e','');
            x = x.replace('l', '');
            //now we can get the value out of the entryID column in row number x
            var entryID = parseInt(document.getElementById("entryID" + x).innerHTML);
            alert(entryID);
            // we need to post the id of the entry to delete to the controller
            var url = "deleteEntry?entryID=" + entryID;
            $.post(url, function(data){
                if(data){
                    alert("Entry has been deleted.");
                    location.reload();
                }else{
                    alert("Something went wrong, entry not deleted.");
                }
            });
        }else{
            return;
        }
}
function popup(count){
    //we want to have a popup right by the clicked on table row that will have a delete and edit button
    //get row
    var col = document.getElementById("colEdit" + count);
    col.style.display = "block";
}


</script>